[
  
  {
    "title": "Github Action으로 Android Firebase App Distribution 배포 자동화 하기",
    "url": "/posts/github-action-android-firebase-app-distribution/",
    "categories": "log",
    "tags": "android, ci/cd, git",
    "date": "2024-12-17 00:00:00 +0900",
    





    
    "snippet": "목표 : 테스트앱 배포 자동화매번 테스트 앱 배포할 때마다 배포하고 노티하는 번거로움을 CD로 해결해보자.  트리거가 발생하면 -&gt; Firebase App Distribution 배포  성공 시 Slack 채널에 알람name : App Buildon :     # 트리거 정의    job :    # APK 추출    # App Distrubut...",
    "content": "목표 : 테스트앱 배포 자동화매번 테스트 앱 배포할 때마다 배포하고 노티하는 번거로움을 CD로 해결해보자.  트리거가 발생하면 -&gt; Firebase App Distribution 배포  성공 시 Slack 채널에 알람name : App Buildon :     # 트리거 정의    job :    # APK 추출    # App Distrubution 업로드    # Slack 채널에 노티테스트최종 코드action.yamlname: App-Distributionon:  push:    branches:      - release/**       - hotfix/**    paths:      - docs/release-note.txtenv:  RELEASE_NOTE_FILE: docs/release-note.txtjobs:  deploy:    runs-on: ubuntu-latest    steps:      - name: Checkout branch        uses: actions/checkout@v2      - name: Cache NDK        uses: actions/cache@v2        with:          path: |            ~/ndk          key: $-ndk-20.0.5594570-$          restore-keys: |            $-ndk-      - name: Install NDK        run: |          mkdir -p $HOME/ndk          wget -q https://dl.google.com/android/repository/android-ndk-r20-linux-x86_64.zip -O $HOME/ndk/ndk.zip          unzip -qn $HOME/ndk/ndk.zip -d $HOME/ndk          echo \"ndk.dir=$HOME/ndk/android-ndk-r20\" &gt;&gt; $GITHUB_WORKSPACE/local.properties      - name: Gradle cache        uses: actions/cache@v3        with:          path: |            ~/.gradle/caches            ~/.gradle/wrapper          key: $-gradle-$          restore-keys: |            $-gradle-      - name: Set up JDK        uses: actions/setup-java@v3        with:          distribution: 'zulu'          java-version: '17'      - name: Grant Permission for gradlew # gradlew 에 대한 퍼미션을 허용한다.        run: chmod +x ./gradlew        shell: bash      - name: Create google-services.json        run: echo '$' &gt; ./app/google-services.json      - name: Build APK        run: ./gradlew assembleDebug\t\t\t\t      - name: Find APK in folder        id: find_apk        run: |          apk_file=$(find app/build/outputs/apk/debug -name '*.apk' -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -d' ' -f2-)          echo \"Found APK file: $apk_file\"          echo \"apk_file=$apk_file\" &gt;&gt; $GITHUB_ENV      # Deploy to Firebase App Distribution      - name: Deploy to Firebase App Distribution        uses: wzieba/Firebase-Distribution-Github-Action@v1        with:          appId: $          serviceCredentialsFileContent: $          file: $          groups: $          releaseNotesFile: $            # 파일 내용 읽어 환경 변수로 설정      - name: Read Release Notes and Set Environment Variable        run: |          if [ -f \"$RELEASE_NOTE_FILE\" ]; then              echo \"Converting release notes to a JSON-friendly format...\"              RELEASE_NOTES=$(cat \"$RELEASE_NOTE_FILE\" | sed ':a;N;$!ba;s/\\n/\\\\n/g')              echo \"FIREBASE_RELEASE_NOTES=$RELEASE_NOTES\" &gt;&gt; \"$GITHUB_ENV\"          else              echo \"FIREBASE_RELEASE_NOTES=No release notes found\" &gt;&gt; \"$GITHUB_ENV\"          fi      - name: Debug Specific Environment Variable        run: |          echo \"FIREBASE_RELEASE_NOTES: $FIREBASE_RELEASE_NOTES\"          # Notify      - name: Send success notification to Slack        if: success()        uses: slackapi/slack-github-action@v2.0.0        env:          RELEASE_NOTES: $          GROUP: $        with:          payload-file-path: \"./artifacts.json\"          payload-templated: true          webhook: $          webhook-type: webhook-trigger./artifacts.json{  \"text\": \"Firebase App Deployment Notification\",  \"attachments\": [    {      \"color\": \"#74d990\",      \"blocks\": [        {          \"type\": \"section\",          \"text\": {            \"type\": \"mrkdwn\",            \"text\": \":rocket: *Firebase App Distribution Successful*\"          }        },        {          \"type\": \"section\",          \"text\": {            \"type\": \"mrkdwn\",            \"text\": \"$\"          }        },        {          \"type\": \"divider\"        },        {          \"type\": \"context\",          \"elements\": [            {              \"type\": \"mrkdwn\",              \"text\": \"Group: $\"            }          ]        }      ]    }  ]}release/, hotfix/ 브랜치에서 docs/release-note.txt 변경 시 배포:  배포 노트까지 로컬에서 써서 push만 하면 바로 배포가 되도록 설정  처음에는 트리거를 이슈로 하고 이슈 내용을 배포 노트로 해도 좋을 것 같아서 해봤는데, 배포할 브랜치 설정도 필요하고, 이슈 오픈하는 과정이나 이런 게 귀찮아서 최대한 단순하게 하는 게 좋을 것 같아 pass          이슈 트리거로 했던 코드는 아래에 메모      on:# trigger : 이슈 생성 시 issues:   types: [ opened ]    # 중간 설정    # ...        # 이슈 설명 가져오기    - name: Get issue description      id: fetch-issue      uses: actions/github-script@v6      with:        script: |          const description = context.payload.issue?.body || \"\";          core.setOutput(\"issue_body\", description);    # Firebase 배포    - name: Deploy to Firebase App Distribution      uses: wzieba/Firebase-Distribution-Github-Action@v1      with:        appId: $        serviceCredentialsFileContent: $        file: $        groups: $        releaseNotes: $변수 설정:  기본적으로 위와 같은 설정 해주었고 추가로 keystore 등 추가하면 된다.  FIREBASE_GROUPS는 파이어베이스 배포 그룹이었는데 간단히 바꿀 수 있게끔 하려고 var 로 뺐다.          이 부분 그룹 ID 대충 해보려고 하다가 고생함…      그룹은 들어가서 파이어베이스 그룹 이름이 아니고 이름 옆에 표기된 걸로 해야 한다.      여러 개 그룹 넣을 경우에는 띄워쓰기 없이 아래처럼 해야한다.                  “그룹1,그룹2”          그룹 ID가 제대로 설정하지 않으면 아래와 같은 오류를 마주한다..                          HTTP Error: 404, Requested entity was not found.                                          =&gt; 단 요건 github action 버전 마다 다를 수 있어서 주의 필요![image](https://user-images.githubusercontent.com/17172841/173846092-89ae68b6-96f8-4f66-826f-47962efecd7f.png)  CREDENTIAL_FILE_CONTENT의 경우는 해당 사이트 참고해서 발급받으면 된다../artifacts.json 으로 Slack 에 노티 시 템플릿 설정:  Slack Kit Builder 에서 만들었음  payload-templated을 true로 해주고, payload-file-path를 위로 설정해주어야 되며, 처음에 json 파일에서 바로 변수 참조했다가 `???’ 로 뜨는 경우가 있었다… 요 이슈 참고해서 env로 설정해서 해결  추가로 release-note.txt 파일을 그냥 cat으로 읽으면 –&gt; 멀티 라인은 변수로 저장할 수 없어서 변수 저장할 때부터 오류, EOF로 바꾸면 형식을 artifacts.json에서 읽을 수 없다고 하기 때문에 json 이 읽을 수 있는 형식에 맞게 바꿔주었다."
  },
  
  {
    "title": "Tasks and the back stack : Task",
    "url": "/posts/Tasks-and-the-back-stask-task/",
    "categories": "log",
    "tags": "android, task",
    "date": "2024-11-27 00:00:00 +0900",
    





    
    "snippet": "앱 내에서 화면 이동을 구현하다보면 Intent에서 Flag를 세팅해줄 일이 많이 생기는 것 같다.아무래도 사이드 프로젝트에선 화면 진입이 대부분 한 군데인 것만 경험했는데, 실무에서는 푸시나 링크 등 진입점이 다양해지고, 중간에 쌓인 화면을 모두 꺼버리는 등 스택 관리가 중요시 하게 되어 이런 일들이 발생하는 듯하다.작년 이맘때 쯤 이부분 헷갈려서 ...",
    "content": "앱 내에서 화면 이동을 구현하다보면 Intent에서 Flag를 세팅해줄 일이 많이 생기는 것 같다.아무래도 사이드 프로젝트에선 화면 진입이 대부분 한 군데인 것만 경험했는데, 실무에서는 푸시나 링크 등 진입점이 다양해지고, 중간에 쌓인 화면을 모두 꺼버리는 등 스택 관리가 중요시 하게 되어 이런 일들이 발생하는 듯하다.작년 이맘때 쯤 이부분 헷갈려서 적어두었다가 이번 기회에 조금 더 정리해서 올려본당Tasktask ?  A task is a collection of activities that users interact with when trying to do something in your app. (링크)📌 Task는 사용자 관점에서 Activity의 모음이다.예를 들어 이메일 앱에는 새 메시지 목록을 표시하는 Activity가 있으며,사용자가 메시지를 선택하면 해당 메시지를 볼 수 있는 새 Activity가 열린다.새로운 Activity는 백 스택에 추가되며, 뒤로가기를 하거나 종료하면 스택에서 제거가 된다.root launcher activities앱에서 처음 실행할 Activity의 경우 AndroidManifest.xml에 아래처럼 인텐트 필터를 ACTION_MAIN, CATEGORY_LAUNCHER로 선언한다.&lt;activity          android:name=\".feature.main.MainActivity\"          android:exported=\"true\"&gt;  &lt;intent-filter&gt;    &lt;action android:name=\"android.intent.action.MAIN\" /&gt;    &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt;  &lt;/intent-filter&gt;&lt;/activity&gt;이렇게 선언된 Activity는 곧 root launcher activity가 된다.task의 root가 된다는 것이며, 이러한 root activity에서 백 버튼을 눌렀을 때 동작 과정은 os 별로 상이하다.  android 11 이하 : 시스템이 activity를 종료 시킨다.  android 12 이상 : activity를 종료하는 대신, task를 background로 이동시킨다.background 및 foreground taskTask는 하나의 응집된 작업 단위다.만약 새 작업을 시작하거나, 새로운 앱을 열면 현재 Task는 Background로 이동하고, 현재 백스택을 그대로 유지하고 있다.그러다 다시 Background에서 Foreground로 돌아오면, 스택에서 가장 위에 있던 Activity가 활성화 되어 사용자는 마지막으로 보고 있던 화면에서 이어서 진행할 수 있는 것.😎 tip. ADB로 stack 확인하는 명령어adb shell dumpsys activity activities궁금증 풀기1. 앱마다 Task가 다른가? 앱 안에서도 Task가 다르게 선언될 수 있나?기본적으로는 앱마다 task는 다르게 선언된다.앱이 열리면, 기본적으로는 root launcher activity를 새로운 task에 추가하게 된다.그러나 내가 임의로 어떤 Activity를 taskAffinity 속성을 사용해서 다른 앱의 task에 올라가게끔 선언이 가능하다. -&gt; 이 부분은 직접 테스트 해보고 넣어볼 것.앱 안에서 task 또한 위 속성을 사용하거나, Intent Flags 혹은 launchMode를 사용해서 제어가 가능하다.2. 멀티 윈도우로 있을 때에는 task는 어떻게 되는가?시스템은 각 창별로 task를 따로 관리하게 된다. (참고)"
  },
  
  {
    "title": "Photo Picker",
    "url": "/posts/Photo-Picker/",
    "categories": "log",
    "tags": "android",
    "date": "2024-11-24 00:00:00 +0900",
    





    
    "snippet": "전에 targetSDK 34 대응할 때 PhotoPicker 관련 히스토리 정리용.Photo Picker  The photo picker provides a browsable interface that presents the user with their media library (공식 문서)      안드로이드에서 제공하는 사진 선택기.  단일 / 멀...",
    "content": "전에 targetSDK 34 대응할 때 PhotoPicker 관련 히스토리 정리용.Photo Picker  The photo picker provides a browsable interface that presents the user with their media library (공식 문서)      안드로이드에서 제공하는 사진 선택기.  단일 / 멀티 and 이미지 / 동영상 제공 하며, 권한 없이 미디어에 접근 가능  Photo Picker의 사용 조건          Android 13 이상 이거나 혹은 Android 11 이상이면서 SDK R Extensions이 최소 2일 때      그 외에 ACTION_OPEN_DOCUMENT 등의 방식으로 내부에서 분기 처리        ✅ 나중에 알게된 사실, PhotoPicker가 일부 앨범만 표시되는 경우가 있다. 관련 이슈 트래커 링크PhotoPicker 외의 미디어 선택 방법  단순 미디어 선택이 필요한 경우 권한 없이 ACTION_OPEN_DOCUMENT이나 ACTION_PICK 를 사용하면 충분히 가능하다.          이 경우 이미지, 동영상만이 아닌 pdf와 같은 파일에도 접근이 된다.          val intent = Intent(Intent.ACTION_OPEN_DOCUMENT).apply {      addCategory(Intent.CATEGORY_OPENABLE)      type = \"application/pdf\"      // Optionally, specify a URI for the file that should appear in the      // system file picker when it loads.      putExtra(DocumentsContract.EXTRA_INITIAL_URI, pickerInitialUri)  }                      만약 PhotoPicker 만으로 원하는 기능을 구현할 수 없거나 혹은 앱 디자인과 통일하고 싶은 경우 MediaStore에 직접 접근하여 커스텀 갤러리 구현이 필요하다.     * targetSDK34 부터 ‘선택한 사진에 대한 접근 권한’ 추가 -&gt; 접근 가능한 사진이 추가 가능하도록 기능 제공 필요     * 또한 추가로 유저가 얼마든지 권한을 ‘모두 허용’으로 바꾸게끔 UI를 제공하는 것도 좋다.          관련 블로그 - Android 14에서 추가된 ‘사진/동영상의 일부 접근 권한’ 제대로 대응하는 방법      "
  },
  
  {
    "title": "minSdk, targetSdk, complieSdk",
    "url": "/posts/minsdk-targetsdk-compliesdk/",
    "categories": "log",
    "tags": "android",
    "date": "2023-10-25 00:00:00 +0900",
    





    
    "snippet": "회사에서 targetsdk34 대응 작업을 진행하게 되면서 정리한 글minSdk, targetSdk, complieSdk  minSdk : 애플리케이션을 실행하는데 필요한 최소 API 수준  만약 API 레벨이 이 속성에 지정된 값보다 낮은 경우 사용자는 애플리케이션을 설치할 수 없다.  targetSdk : 애플리케이션이 대상으로 하는 API 레벨 ...",
    "content": "회사에서 targetsdk34 대응 작업을 진행하게 되면서 정리한 글minSdk, targetSdk, complieSdk  minSdk : 애플리케이션을 실행하는데 필요한 최소 API 수준  만약 API 레벨이 이 속성에 지정된 값보다 낮은 경우 사용자는 애플리케이션을 설치할 수 없다.  targetSdk : 애플리케이션이 대상으로 하는 API 레벨  설정하지 않으면 기본 값은 minSdk 버전과 같다.  targetSdk를 올리게 되면, 최소 sdk(즉 minSdk)에서 정의된 요소만 사용하도록 제한 X, API 수준에 정의된 매니페스트 요소 혹은 동작을 사용할 수 있다.  complieSdk : 컴파일 시 \b사용할 Android API 버전  targetSdkVersion &lt;= complieSdkVersion          complieSdk를 올리면 지정 API로 컴파일 시 사용되고, targetSdk를 올리면 런타임 때 사용된다.        target API가 컴파일이 되지 않았는데 지원은 할 수 없기 때문에 그렇다.  API 레벨: Android 플랫폼 버전에서 제공하는 프레임워크 API 계정을 고유하게 식별하는 정수 \t- 각 플랫폼 버전은 정확히 하나의 api를 지원하지만, 모든 이전 API 레벨(API 레벨 1까지)에 대한 지원이 암시적으로 지원된다.targetSdk를 올릴 때에는 언제인가?  Android 버전이 높은 기기에서 최소 targetSdk가 있을 때          예를 들면 Android 15에서는 targetSdk        Google Play 요구사항          targetSdk34 때는 타겟팅이 되어야 신규 앱 등록 or 앱 업데이트가 가능했었다. (링크)        왜 올려야 할까?          새로운 버전의 Sdk가 나오면, 보안과 성능이 개선된다.      일부는 이런 지원을 명시적으로 선언한 앱에서만 적용된다.      버전 대응의 의미  Android 버전에 대응하겠다라는 것은          다양한 Android 버전에서 작동하도록 하는 것.      오래된 기기에서도 앱을 사용할 수 있도록 하는 것        targetSdk 버전에 대응하겠다는 것은          특정 Android 버전을 목표로 개발하여 최적화 하겠다.      새로운 Android 기능 및 최적화를 활용해 최신 버전의 Android에서 정상적으로 작동하도록 하는 것.      "
  },
  
  {
    "title": "Customize the Favicon",
    "url": "/posts/customize-the-favicon/",
    "categories": "Blogging, Tutorial",
    "tags": "favicon",
    "date": "2019-08-11 01:34:00 +0900",
    





    
    "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons...",
    "content": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files:  browserconfig.xml  site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.The following table will help you understand the changes to the favicon files:            File(s)      From Online Tool      From Chirpy                  *.PNG      ✓      ✗              *.ICO      ✓      ✗        ✓ means keep, ✗ means delete.The next time you build the site, the favicon will be replaced with a customized edition."
  },
  
  {
    "title": "Getting Started",
    "url": "/posts/getting-started/",
    "categories": "Blogging, Tutorial",
    "tags": "getting started",
    "date": "2019-08-09 21:55:00 +0900",
    





    
    "snippet": "Creating a Site RepositoryWhen creating your site repository, you have two options depending on your needs:Option 1. Using the Starter (Recommended)This approach simplifies upgrades, isolates unnec...",
    "content": "Creating a Site RepositoryWhen creating your site repository, you have two options depending on your needs:Option 1. Using the Starter (Recommended)This approach simplifies upgrades, isolates unnecessary files, and is perfect for users who want to focus on writing with minimal configuration.  Sign in to GitHub and navigate to the starter.  Click the Use this template button and then select Create a new repository.  Name the new repository &lt;username&gt;.github.io, replacing username with your lowercase GitHub username.Option 2. Forking the ThemeThis approach is convenient for modifying features or UI design, but presents challenges during upgrades. So don’t try this unless you are familiar with Jekyll and plan to heavily modify this theme.  Sign in to GitHub.  Fork the theme repository.  Name the new repository &lt;username&gt;.github.io, replacing username with your lowercase GitHub username.Setting up the EnvironmentOnce your repository is created, it’s time to set up your development environment. There are two primary methods:Using Dev Containers (Recommended for Windows)Dev Containers offer an isolated environment using Docker, which prevents conflicts with your system and ensures all dependencies are managed within the container.Steps:  Install Docker:          On Windows/macOS, install Docker Desktop.      On Linux, install Docker Engine.        Install VS Code and the Dev Containers extension.  Clone your repository:          For Docker Desktop: Start VS Code and clone your repo in a container volume.      For Docker Engine: Clone your repo locally, then open it in a container via VS Code.        Wait for the Dev Containers setup to complete.Setting up Natively (Recommended for Unix-like OS)For Unix-like systems, you can set up the environment natively for optimal performance, though you can also use Dev Containers as an alternative.Steps:  Follow the Jekyll installation guide to install Jekyll and ensure Git is installed.  Clone your repository to your local machine.  If you forked the theme, install Node.js and run bash tools/init.sh in the root directory to initialize the repository.  Run command bundle in the root of your repository to install the dependencies.UsageStart the Jekyll ServerTo run the site locally, use the following command:$ bundle exec jekyll s  If you are using Dev Containers, you must run that command in the VS Code Terminal.After a few seconds, the local server will be available at http://127.0.0.1:4000.ConfigurationUpdate the variables in _config.yml as needed. Some typical options include:  url  avatar  timezone  langSocial Contact OptionsSocial contact options are displayed at the bottom of the sidebar. You can enable or disable specific contacts in the _data/contact.yml file.Customizing the StylesheetTo customize the stylesheet, copy the theme’s assets/css/jekyll-theme-chirpy.scss file to the same path in your Jekyll site, and add your custom styles at the end of the file.Customizing Static AssetsStatic assets configuration was introduced in version 5.1.0. The CDN of the static assets is defined in _data/origin/cors.yml. You can replace some of them based on the network conditions in the region where your website is published.If you prefer to self-host the static assets, refer to the chirpy-static-assets repository.DeploymentBefore deploying, check the _config.yml file and ensure the url is configured correctly. If you prefer a project site and don’t use a custom domain, or if you want to visit your website with a base URL on a web server other than GitHub Pages, remember to set the baseurl to your project name, starting with a slash, e.g., /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy Using Github ActionsPrepare the following:  If you’re on the GitHub Free plan, keep your site repository public.      If you have committed Gemfile.lock to the repository, and your local machine is not running Linux, update the platform list of the lock file:    $ bundle lock --add-platform x86_64-linux      Next, configure the Pages service:      Go to your repository on GitHub. Select the Settings tab, then click Pages in the left navigation bar. In the Source section (under Build and deployment), select GitHub Actions from the dropdown menu.        Push any commits to GitHub to trigger the Actions workflow. In the Actions tab of your repository, you should see the workflow Build and Deploy running. Once the build is complete and successful, the site will be deployed automatically.  You can now visit the URL provided by GitHub to access your site.Manual Build and DeploymentFor self-hosted servers, you will need to build the site on your local machine and then upload the site files to the server.Navigate to the root of the source project, and build your site with the following command:$ JEKYLL_ENV=production bundle exec jekyll bUnless you specified the output path, the generated site files will be placed in the _site folder of the project’s root directory. Upload these files to your target server."
  },
  
  {
    "title": "Writing a New Post",
    "url": "/posts/write-a-new-post/",
    "categories": "Blogging, Tutorial",
    "tags": "writing",
    "date": "2019-08-08 15:10:00 +0900",
    





    
    "snippet": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and P...",
    "content": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG]     # TAG names should always be lowercase---  The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateTo accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:Adding author information in _data/authors.yml (If your website doesn’t have this file, don’t hesitate to create one).&lt;author_id&gt;:  name: &lt;full name&gt;  twitter: &lt;twitter_of_author&gt;  url: &lt;homepage_of_author&gt;And then use author to specify a single entry or authors to specify multiple entries:---author: &lt;author_id&gt;                     # for single entry# orauthors: [&lt;author1_id&gt;, &lt;author2_id&gt;]   # for multiple entries---Having said that, the key author can also identify multiple entries.  The benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.Post DescriptionBy default, the first words of the post are used to display on the home page for a list of posts, in the Further Reading section, and in the XML of the RSS feed. If you don’t want to display the auto-generated description for the post, you can customize it using the description field in the Front Matter as follows:---description: Short summary of the post.---Additionally, the description text will also be displayed under the post title on the post’s page.Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global setting for comments is defined by the comments.provider option in the _config.yml file. Once a comment system is selected for this variable, comments will be enabled for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MediaWe refer to images, audio and video as media resources in Chirpy.URL PrefixFrom time to time we have to define duplicate URL prefixes for multiple resources in a post, which is a boring task that you can avoid by setting two parameters.      If you are using a CDN to host media files, you can specify the cdn in _config.yml. The URLs of media resources for site avatar and posts are then prefixed with the CDN domain name.    cdn: https://cdn.com            To specify the resource path prefix for the current post/page range, set media_subpath in the front matter of the post:    ---media_subpath: /path/to/media/---      The option site.cdn and page.media_subpath can be used individually or in combination to flexibly compose the final resource URL: [site.cdn/][page.media_subpath/]file.extImagesCaptionAdd italics to the next line of an image, then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeTo prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image.![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }  For an SVG, you have to at least specify its width, otherwise it won’t be rendered.Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right.  Once the position is specified, the image caption should not be added.      Normal position    Image will be left aligned in below sample:    ![Desktop View](/assets/img/sample/mockup.png){: .normal }            Float to the left    ![Desktop View](/assets/img/sample/mockup.png){: .left }            Float to the right    ![Desktop View](/assets/img/sample/mockup.png){: .right }      Dark/Light modeYou can make images follow theme preferences in dark/light mode. This requires you to prepare two images, one for dark mode and one for light mode, and then assign them a specific class (dark or light):![Light mode only](/path/to/light-mode.png){: .light }![Dark mode only](/path/to/dark-mode.png){: .dark }ShadowThe screenshots of the program window can be considered to show the shadow effect:![Desktop View](/assets/img/sample/mockup.png){: .shadow }Preview ImageIf you want to add an image at the top of the post, please provide an image with a resolution of 1200 x 630. Please note that if the image aspect ratio does not meet 1.91 : 1, the image will be scaled and cropped.Knowing these prerequisites, you can start setting the image’s attribute:---image:  path: /path/to/image  alt: image alternative text---Note that the media_subpath can also be passed to the preview image, that is, when it has been set, the attribute path only needs the image file name.For simple use, you can also just use image to define the path.---image: /path/to/image---LQIPFor preview images:---image:  lqip: /path/to/lqip-file # or base64 URI---  You can observe LQIP in the preview image of post \"Text and Typography\".For normal images:![Image description](/path/to/image){: lqip=\"/path/to/lqip-file\" }VideoSocial Media PlatformYou can embed videos from social media platforms with the following syntax:{% include embed/{Platform}.html id='{ID}' %}Where Platform is the lowercase of the platform name, and ID is the video ID.The following table shows how to get the two parameters we need in a given video URL, and you can also know the currently supported video platforms.            Video URL      Platform      ID                  https://www.youtube.com/watch?v=H-B46URT4mg      youtube      H-B46URT4mg              https://www.twitch.tv/videos/1634779211      twitch      1634779211              https://www.bilibili.com/video/BV1Q44y1B7Wf      bilibili      BV1Q44y1B7Wf      Video FilesIf you want to embed a video file directly, use the following syntax:{% include embed/video.html src='{URL}' %}Where URL is a URL to a video file e.g. /path/to/sample/video.mp4.You can also specify additional attributes for the embedded video file. Here is a full list of attributes allowed.  poster='/path/to/poster.png' — poster image for a video that is shown while video is downloading  title='Text' — title for a video that appears below the video and looks same as for images  autoplay=true — video automatically begins to play back as soon as it can  loop=true — automatically seek back to the start upon reaching the end of the video  muted=true — audio will be initially silenced  types — specify the extensions of additional video formats separated by |. Ensure these files exist in the same directory as your primary video file.Consider an example using all of the above:{%  include embed/video.html  src='/path/to/video.mp4'  types='ogg|mov'  poster='poster.png'  title='Demo video'  autoplay=true  loop=true  muted=true%}AudiosIf you want to embed an audio file directly, use the following syntax:{% include embed/audio.html src='{URL}' %}Where URL is a URL to an audio file e.g. /path/to/audio.mp3.You can also specify additional attributes for the embedded audio file. Here is a full list of attributes allowed.  title='Text' — title for an audio that appears below the audio and looks same as for images  types — specify the extensions of additional audio formats separated by |. Ensure these files exist in the same directory as your primary audio file.Consider an example using all of the above:{%  include embed/audio.html  src='/path/to/audio.mp3'  types='ogg|wav|aac'  title='Demo audio'%}Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Highlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value```  The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho 'No more line numbers!'```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=\"path/to/file\" }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains 'Pack' %}  This product's title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.MathematicsWe use MathJax to generate mathematics. For website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---After enabling the mathematical feature, you can add math equations with the following syntax:  Block math should be added with $$ math $$ with mandatory blank lines before and after $$          Inserting equation numbering should be added with $$\\begin{equation} math \\end{equation}$$      Referencing equation numbering should be done with \\label{eq:label_name} in the equation block and \\eqref{eq:label_name} inline with text (see example below)        Inline math (in lines) should be added with $$ math $$ without any blank line before or after $$  Inline math (in lists) should be added with \\$$ math $$&lt;!-- Block math, keep all blank lines --&gt;$$LaTeX_math_expression$$&lt;!-- Equation numbering, keep all blank lines  --&gt;$$\\begin{equation}  LaTeX_math_expression  \\label{eq:label_name}\\end{equation}$$Can be referenced as \\eqref{eq:label_name}.&lt;!-- Inline math in lines, NO blank lines --&gt;\"Lorem ipsum dolor sit amet, $$ LaTeX_math_expression $$ consectetur adipiscing elit.\"&lt;!-- Inline math in lists, escape the first `$` --&gt;1. \\$$ LaTeX_math_expression $$2. \\$$ LaTeX_math_expression $$3. \\$$ LaTeX_math_expression $$  Starting with v7.0.0, configuration options for MathJax have been moved to file assets/js/data/mathjax.js, and you can change the options as needed, such as adding extensions.If you are building the site via chirpy-starter, copy that file from the gem installation directory (check with command bundle info --path jekyll-theme-chirpy) to the same directory in your repository.MermaidMermaid is a great diagram generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts."
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-08 12:33:00 +0900",
    





    
    "snippet": "HeadingsH1 — headingH2 — headingH3 — headingH4 — headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risu...",
    "content": "HeadingsH1 — headingH2 — headingH3 — headingH4 — headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    ToDo list  Job          Step 1      Step 2      Step 3      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blocksCommonThis is a common code snippet, without syntax highlight and line number.Specific Languageif [ $? -ne 0 ]; then  echo \"The command was not successful.\";  #do the needful / exitfi;Specific filename@import  \"colors/light-typography\",  \"colors/dark-typography\";MathematicsThe mathematics powered by MathJax:\\[\\begin{equation}  \\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}  \\label{eq:series}\\end{equation}\\]We can reference the equation as \\eqref{eq:series}.When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dImagesDefault (with caption)Full screen width and center alignmentLeft alignedFloat to leftPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Float to rightPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Dark/Light mode &amp; ShadowThe image below will toggle dark/light mode based on theme preference, notice it has shadows.VideoReverse Footnote            The footnote source &#8617;&#xfe0e;              The 2nd footnote source &#8617;&#xfe0e;      "
  }
  
]

